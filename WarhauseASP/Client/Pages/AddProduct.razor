@page "/addproduct"
@inject HttpClient HttpClient
@using Microsoft.Extensions.Logging
@inject ILogger<State> Logger

<h3>Add New Product</h3>



<EditForm Model="@stateDto" OnSubmit="@HandleSubmit">
    <p>
    <label>Name</label><br/>
    <InputText id="name" @bind-Value="stateDto.Name" />
    </p>
     <p>
        <label>Tax Vat</label><br />
        <InputNumber id="TaxVat" @bind-Value="stateDto.TaxVat" />
    </p>
    <p>
        <label>Selle Price Brutto</label><br />
        <InputNumber id="SellePriceBrutto" @bind-Value="stateDto.SellePriceBrutto" />
    </p>
    <p>
        <label>Purchase Price Netto</label><br />
        <InputNumber id="PurchasePriceNetto" @bind-Value="stateDto.PurchasePriceNetto" />
    </p>
    <button @onclick="() =>  HandleSubmit()" class="btn btn-danger">Add Product</button>
</EditForm>
@sum


@code {

    private StateDto stateDto = new();
    private WarhauseASP.Shared.Counter counter = new();
    private double sum;
    private async Task HandleSubmit()
    {
        Console.WriteLine();
        sum = counter.DiffrentTax(counter.AddProcent(stateDto.PurchasePriceNetto, stateDto.TaxVat), stateDto.SellePriceBrutto,stateDto.TaxVat);
        //await HttpClient.PutAsJsonAsync($"api/Warhause/EdityState?guid={Id}", state);
    }
    private async Task CountSubmit()
    {
        Console.WriteLine();
       // await HttpClient.PutAsJsonAsync($"api/Warhause/EdityState?guid={Id}", state);
    }
}
